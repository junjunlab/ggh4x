% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_panels.R
\name{scale_panels}
\alias{scale_panels}
\alias{scale_x_panels}
\alias{scale_y_panels}
\title{Position scales for facets}
\usage{
scale_x_panels(condition, ..., type = "continuous", .env = parent.frame())

scale_y_panels(condition, ..., type = "continuous", .env = parent.frame())
}
\arguments{
\item{condition}{An expression that evaluates to a `logical` vector in the
context of the panel layout.}

\item{...}{Arguments to pass to the position scale.}

\item{type}{A `character(1)` to note the type of scale, such that
`scale_{x/y}_{type}` is a function that constructs a position scale.
Examples are `"continuous"`, `"discrete"` or `"date"`.}

\item{.env}{The environment for which to look for the `type` function.}
}
\value{
A `facetted_pos_scales` object, instructing a ggplot how to adjust
  the scales per facet.
}
\description{
These functions are for adjusting the position scales in particular panels
of a faceted plot. They should be called *after* the facets have been added
to a plot *and* the facets should have free scales.
}
\details{
For the `condition` argument, the expression is evaluated in the
  tidy evaluation framework whereby the `data.frame` with the plot's layout
  is given priority over the environment in which the expression was created.
  As a consequence, variables (columns) that define faceting groups can be
  referenced directly.

  Other than the syntactic courtesy of directly adding a scale, the mechanism
  of adding a panel specific scale is the same as in [`facetted_pos_scales`].
  The same limitations apply: the `oob` argument isn't working and
  transformations occur *before* stat layer computations.
}
\examples{
# A generic facetted plot
p <- ggplot(mpg, aes(displ, hwy)) +
  geom_point() +
  facet_grid(cyl ~ year, scales = "free")

# Condition based on the facetting variables
p + scale_x_panels(year == 1999, labels = scales::number_format(0.001))

# Condition based on the layout positions
p + scale_y_panels(ROW \%in\% 2:3, limits = c(10, 30))

# Use TRUE condition last for a default scale that applies to all others
p + scale_y_panels(cyl \%in\% c(5, 6), limits = c(10, 30)) +
  scale_y_panels(TRUE, limits = c(10, 50))
}
\seealso{
The [`facetted_pos_scales()`] function.
}
